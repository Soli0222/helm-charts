# Default values for flow-sight
replicaCount: 1

# Internal database configuration (optional - for development)
database:
  enabled: true
  image:
    repository: postgres
    tag: "17.6-alpine3.22"
    pullPolicy: IfNotPresent
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""
  service:
    port: 5432

# OnePassword configuration
onePasswordItem:
  enabled: false  # デフォルトで無効
  name: "flow-sight-backend-secrets"  # OnePasswordItemの名前
  itemPath: "vaults/Kubernetes/items/flow-sight-backend-secrets"  # 1Passwordのアイテムパス

# Backend configuration
backend:
  replicaCount: 1
  image:
    repository: ghcr.io/soli0222/flow-sight-backend
    tag: "1.1.0"
    pullPolicy: IfNotPresent
  environment:
    HOST: "http://localhost:8080"
    DB_HOST: "flow-sight-db"
    DB_SSLMODE: "disable"
    ENV: "production"
  database:
    name: flowsight_db
    user: postgres
    port: 5432
  initContainer:
    enabled: true
    image:
      repository: postgres
      tag: "17.6-alpine3.22"
      pullPolicy: IfNotPresent
  secrets:
    externalName: ""  # 外部Secretの名前（設定すると外部Secretを参照）
    DB_PASSWORD: ""   # OnePasswordItemが無効で外部Secretも使わない場合のパスワード
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080

# Frontend configuration
frontend:
  replicaCount: 1
  image:
    repository: ghcr.io/soli0222/flow-sight-frontend
    tag: "1.1.0"
    pullPolicy: IfNotPresent
  environment:
    NEXT_PUBLIC_API_URL: ""
    NODE_ENV: "production"
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000

# Ingress configuration
ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        - path: /api
          pathType: Prefix
          backend:
            service: backend
        - path: /swagger
          pathType: Prefix
          backend:
            service: backend
        - path: /
          pathType: Prefix
          backend:
            service: frontend
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Resource limits
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}
