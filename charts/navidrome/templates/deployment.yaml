apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "navidrome.fullname" . }}
  labels:
    {{- include "navidrome.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "navidrome.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "navidrome.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "navidrome.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          env:
            - name: ND_SCANSCHEDULE
              value: {{ .Values.config.scanSchedule | quote }}
            - name: ND_LOGLEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: ND_SESSIONTIMEOUT
              value: {{ .Values.config.sessionTimeout | quote }}
            - name: ND_BASEURL
              value: {{ .Values.config.baseUrl | quote }}
            - name: ND_DEFAULTLANGUAGE
              value: {{ .Values.config.defaultLanguage | quote }}
            - name: ND_ENABLECOVERANIMATION
              value: {{ .Values.config.enableCoverAnimation | quote }}
            - name: ND_PROMETHEUS_ENABLED	
              value: {{ .Values.config.prometheusEnabled | quote }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.data.enabled }}
            - name: data
              mountPath: /data
            {{- end }}
            {{- if .Values.persistence.music.enabled }}
            - name: music
              mountPath: /music
              readOnly: true
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.persistence.data.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "navidrome.dataPvcName" . }}
        {{- end }}
        {{- if .Values.persistence.music.enabled }}
        - name: music
          persistentVolumeClaim:
            claimName: {{ include "navidrome.musicPvcName" . }}
        {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "navidrome.fullname" . }}
  labels:
    {{- include "navidrome.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "navidrome.selectorLabels" . | nindent 4 }}