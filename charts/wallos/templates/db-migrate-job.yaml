{{- if .Values.database.initialize }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "wallos.fullname" . }}-db-migrate
  labels:
    {{- include "wallos.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "wallos.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: db-migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for database to be ready..."
              sleep 30
              
              # Check if wallos.db exists
              if [ -f /var/www/html/db/wallos.db ]; then
                echo "Running database migration..."
                # Start PHP built-in server in background for migration
                php -S 0.0.0.0:80 -t /var/www/html &
                PHP_PID=$!
                
                # Wait a moment for server to start
                sleep 5
                
                # Run migration
                curl -f http://localhost/endpoints/db/migrate.php || echo "Migration endpoint call completed"
                
                # Stop PHP server
                kill $PHP_PID 2>/dev/null || true
                
                echo "Database migration completed."
              else
                echo "Database file not found, migration skipped."
                exit 1
              fi
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          volumeMounts:
            {{- if .Values.persistence.db.enabled }}
            - name: db-storage
              mountPath: {{ .Values.persistence.db.mountPath }}
            {{- end }}
          securityContext:
            runAsUser: 33  # www-data user
            runAsGroup: 33
      volumes:
        {{- if .Values.persistence.db.enabled }}
        - name: db-storage
          persistentVolumeClaim:
            claimName: {{ include "wallos.fullname" . }}-db
        {{- end }}
{{- end }}
